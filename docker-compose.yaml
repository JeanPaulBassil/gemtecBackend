services:
  minio:
    image: minio/minio
    restart: unless-stopped
    ports:
      - "9003:9003"
      - "9002:9002"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: minio server --console-address ":9003" /data
    volumes:
      - gemtec-api-miniodata:/data
    networks:
      - gemtec-api-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9002"]
      interval: 30s
      timeout: 30s
      retries: 10

  postgres:
    container_name: gemtec-api-postgres
    image: postgres:15-alpine
    restart: unless-stopped
    user: postgres
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=gemtec
    networks:
      - gemtec-api-network
    volumes:
      - gemtec-api-postgres-data:/var/lib/postgresql/data/
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready",
          "-U",
          "postgres",
          "-d",
          "gemtec",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  nestjs:
    container_name: gemtec-api-nestjs
    build:
      context: .
      dockerfile: ./docker/dev.Dockerfile
    environment:
      - NODE_ENV=development
      - PORT=3002
      - FIREBASE_SERVICE_ACCOUNT={"type":"service_account","project_id":"gemtec-e25e8","private_key":"-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC9QFxMG9JA1POA\n...YOUR-PRIVATE-KEY-HERE...\nVScXHAIDAQAB\n-----END PRIVATE KEY-----\n","client_email":"firebase-adminsdk@gemtec-e25e8.iam.gserviceaccount.com"}
      - FIREBASE_PROJECT_ID=gemtec-e25e8
    networks:
      - gemtec-api-network
    expose:
      - 3002
    ports:
      - "3002:3002"
      - "5555:5555"
    depends_on:
      - postgres
      - minio
    volumes:
      - ./src:/usr/src/app/src
      - ./prisma:/usr/src/app/prisma

  redis:
    container_name: gemtec-api-redis
    image: redis:6.2-alpine
    restart: unless-stopped
    ports:
      - "6380:6379"
    networks:
      - gemtec-api-network
    # Optional: for ephemeral dev usage, you might disable persistence:
    command: ["redis-server", "--appendonly", "no"]

volumes:
  gemtec-api-postgres-data:
  gemtec-api-miniodata:
networks:
  gemtec-api-network:
